for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w2<-w2w2+(1+bt)*((d$default[i]^2)*(x[3]^2)*bt)-((d$default[i]^2)*(x[3]^2)*(bt^2))/((1+bt)^2)
}
#w2w2
w2w2<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w2<-w2w2+(1+bt)*((d$default[i]^2)*(x[3]^2)*bt)-((d$default[i]^2)*(x[3]^2)*(bt^2))/((1+bt)^2)
}
hess[3,3]<-w2w2
#create covariance matrix
covv<-ginv(hess)
#get standard errors (non-private)
s0<-sqrt(covv[1,1])
s1<-sqrt(covv[2,2])
s2<-sqrt(covv[3,3])
#z-values (non-private)
w0<-opt$par[1]/s0
w1<-opt$par[2]/s1
w2<-opt$par[3]/s2
ep_c<-c(0.1,0.1,0.1,0.1)
ev<-eigen(covv)
ev_<-c(0,0,0)
for (i in 1:nrow(covv)){
ev_[i]<-ev$values[i]+rlaplace(n=1,m=0,s=(ep_c[1]/2))
}
covv_<-covv
p<-diag(3)
de<-matrix(0,3,3)
for (i in 1:1){
# #draw u- my first attempt not sure if correct
#  #create grid of points on surface of unit sphere
#  z<-seq(-1,1,length.out = 10000)
#  aa<-seq(0,360,length.out = 10000)
#  x<-sqrt(1-z^2)*cos(aa)
#  y<-sqrt(1-z^2)*sin(aa)
#  inp<-cbind(x,y,z)
#  #calculate the probability density for each of those points
#  prob<-replicate(10000, 0)
#  for(j in 10000){
#  prob[j]<-exp((ep_c[i]/4)*t(inp[j,])%*%covv_%*%inp[j,])
#  }
#  #draw the index of a sphere surface point based on prob. density
#  r<-sample(seq(1:10000),size=1,prob = prob)
#  #get u as the coordinates of said point
#  u<-as.numeric(inp[r,])
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
#############
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
}
covv_dp<- matrix(0,3,3)
for (i in 1:nrow(covv)){covv_dp<-covv_dp+ev_[i]*(de[i,]%*%t(de[i,]))}
covv_dp
covv
hess<- matrix(0,nrow=3,ncol=3)
#w0w0
w0w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w0w0<-w0w0+(1+bt)*((d$default[i]^2)*(x[1]^2)*bt)-((d$default[i]^2)*(x[1]^2)*(bt^2))/((1+bt)^2)
}
hess[1,1]<-w0w0
#w1w0
w1w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w0<-w1w0+(1+bt)*((d$default[i]^2)*(x[1]*x[2])*bt)-((d$default[i]^2)*(x[1]*x[2])*(bt^2))/((1+bt)^2)
}
hess[1,2]<-w1w0
hess[2,1]<-w1w0
#w2w0
w2w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w0<-w2w0+(1+bt)*((d$default[i]^2)*(x[1]*x[3])*bt)-((d$default[i]^2)*(x[1]*x[3])*(bt^2))/((1+bt)^2)
}
hess[1,3]<-w2w0
hess[3,1]<-w2w0
#w1w1
w1w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w1<-w1w1+(1+bt)*((d$default[i]^2)*(x[2]^2)*bt)-((d$default[i]^2)*(x[2]^2)*(bt^2))/((1+bt)^2)
}
hess[2,2]<-w1w1
#w2w1
w2w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w1<-w2w1+(1+bt)*((d$default[i]^2)*(x[2]*x[3])*bt)-((d$default[i]^2)*(x[2]*x[3])*(bt^2))/((1+bt)^2)
}
hess[2,3]<-w2w1
hess[3,2]<-w2w1
#w2w2
w2w2<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w2<-w2w2+(1+bt)*((d$default[i]^2)*(x[3]^2)*bt)-((d$default[i]^2)*(x[3]^2)*(bt^2))/((1+bt)^2)
}
hess[3,3]<-w2w2
hess
covv<-ginv(hess)
covv
s0<-sqrt(covv[1,1])
s1<-sqrt(covv[2,2])
s2<-sqrt(covv[3,3])
s0
s1
s2
w0<-opt$par[1]/s0
w1<-opt$par[2]/s1
w2<-opt$par[3]/s2
w0
w1
w2
ep_c<-c(0.1,0.1,0.1,0.1)
ev<-eigen(covv)
ev_<-c(0,0,0)
for (i in 1:nrow(covv)){
ev_[i]<-ev$values[i]+rlaplace(n=1,m=0,s=(ep_c[1]/2))
}
covv_<-covv
p<-diag(3)
de<-matrix(0,3,3)
for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
#############
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
}
covv_dp<- matrix(0,3,3)
for (i in 1:nrow(covv)){covv_dp<-covv_dp+ev_[i]*(de[i,]%*%t(de[i,]))}
covv_dp
covv
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(magrittr)
library(ggthemes)
library(gridExtra)
library(gganimate)
library(magick)
library(ppls)
library(matlib)
library(rmutil)
library(MASS)
library(tilting)
library(PrivateLR)
d<-read.table("dataset_3_n")
#### PART 1 - Recreating the PrivateLR package based on this paper: https://www.jmlr.org/papers/volume12/chaudhuri11a/chaudhuri11a.pdf
ep<-1  #Privacy Budget
lam<-1
c<-0.25 #set value in paper for Logistic Regression
#pre-process data
d<-mutate(d,gender=replace(d$gender, d$gender=="male",1))
d<-mutate(d,gender=replace(d$gender,d$gender=="female",0))   # NEED TO NORMALISE EACH ROW (IN THEIR CASE INDIVIDUALS ARE COLUMNS HERE THEY ARE ROWS)
d<-mutate(d,salary=normalize.vector(d$salary))
d<-filter(d,thres=="50000")
#set ep_
ep_ <- ep-log(1+(2*c/dim(d)[1]*lam)+((c^2)/(dim(d)[1]*lam)^2))
if (ep_>0){del=0}else {del<-(c/dim(d)[1]*(exp(ep/4)-1))-lam
ep_<-ep/2}
#draw noise vector (b)
a<-(seq(0,10000)*0.1)
prob<-(ep_/2)*exp(-(ep_/2)*a)
r<-sample(a,size=1,prob = prob)
ro<-runif(1,max=360)
theta<-runif(1,max=360)
b<-c(r*sin(ro)*cos(theta),r*sin(ro)*sin(theta),r*cos(ro))
#set perturbed objective function
#ed<-0
#for (i in 1:nrow(d)){
#  c<-(c(0,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
#  ed<-ed+log(1+exp(-d$default[i]*sum(t(w)*c)))}
#vv<-ed/dim(d)[1]
w_<-function(w, lam.=lam,d.=d,del.=del,b.=b){
ed<-0
for (i in 1:nrow(d.)){
c<-(c(1,as.numeric(d.$salary[i]),as.numeric(d.$gender[i])))
ed<-ed+log(1+exp(-d.$default[i]*sum(t(w)*c)))}
vv<-ed/dim(d)[1]
(0.5*sum(t(w)*w)*lam.)+(sum(t(b.)*w)/dim(d.)[1])+vv+(0.5*sum(t(w)*w)*del.)
}
#optimize the perturbed objective function
opt<-optim(c(1,1,1),w_,lam.=lam,d.=d,del.=del,b.=b,method = "BFGS")
#Calculate Hessian matrix-based on theoretical calculations written on the notebook
hess<- matrix(0,nrow=3,ncol=3)
#w0w0
w0w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w0w0<-w0w0+(1+bt)*((d$default[i]^2)*(x[1]^2)*bt)-((d$default[i]^2)*(x[1]^2)*(bt^2))/((1+bt)^2)
}
hess[1,1]<-w0w0
#w1w0
w1w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w0<-w1w0+(1+bt)*((d$default[i]^2)*(x[1]*x[2])*bt)-((d$default[i]^2)*(x[1]*x[2])*(bt^2))/((1+bt)^2)
}
hess[1,2]<-w1w0
hess[2,1]<-w1w0
#w2w0
w2w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w0<-w2w0+(1+bt)*((d$default[i]^2)*(x[1]*x[3])*bt)-((d$default[i]^2)*(x[1]*x[3])*(bt^2))/((1+bt)^2)
}
hess[1,3]<-w2w0
hess[3,1]<-w2w0
#w1w1
w1w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w1<-w1w1+(1+bt)*((d$default[i]^2)*(x[2]^2)*bt)-((d$default[i]^2)*(x[2]^2)*(bt^2))/((1+bt)^2)
}
hess[2,2]<-w1w1
#w2w1
w2w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w1<-w2w1+(1+bt)*((d$default[i]^2)*(x[2]*x[3])*bt)-((d$default[i]^2)*(x[2]*x[3])*(bt^2))/((1+bt)^2)
}
hess[2,3]<-w2w1
hess[3,2]<-w2w1
#w2w2
w2w2<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w2<-w2w2+(1+bt)*((d$default[i]^2)*(x[3]^2)*bt)-((d$default[i]^2)*(x[3]^2)*(bt^2))/((1+bt)^2)
}
hess[3,3]<-w2w2
#create covariance matrix
covv<-ginv(hess)
#get standard errors (non-private)
s0<-sqrt(covv[1,1])
s1<-sqrt(covv[2,2])
s2<-sqrt(covv[3,3])
#z-values (non-private)
w0<-opt$par[1]/s0
w1<-opt$par[2]/s1
w2<-opt$par[3]/s2
ep_c<-c(0.1,0.1,0.1,0.1)
ev<-eigen(covv)
ev_<-c(0,0,0)
for (i in 1:nrow(covv)){
ev_[i]<-ev$values[i]+rlaplace(n=1,m=0,s=(ep_c[1]/2))
}
covv_<-covv
p<-diag(3)
de<-matrix(0,3,3)
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
View(a)
View(a)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
ev$values[3]*diag(3)
ev$values[3]
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
#}
covv_dp<- matrix(0,3,3)
for (i in 1:nrow(covv)){covv_dp<-covv_dp+ev_[i]*(de[i,]%*%t(de[i,]))}
covv_dp
covv
#for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
```
#for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
#############
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
#}
covv_dp<- matrix(0,3,3)
for (i in 1:nrow(covv)){covv_dp<-covv_dp+ev_[i]*(de[i,]%*%t(de[i,]))}
#for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
#for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
pp
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
#############
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
#}
covv_
covv_dp<- matrix(0,3,3)
for (i in 1:nrow(covv)){covv_dp<-covv_dp+ev_[i]*(de[i,]%*%t(de[i,]))}
covv_dp
covv
hess<- matrix(0,nrow=3,ncol=3)
#w0w0
w0w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w0w0<-w0w0+(1+bt)*((d$default[i]^2)*(x[1]^2)*bt)-((d$default[i]^2)*(x[1]^2)*(bt^2))/((1+bt)^2)
}
hess[1,1]<-w0w0
#w1w0
w1w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w0<-w1w0+(1+bt)*((d$default[i]^2)*(x[1]*x[2])*bt)-((d$default[i]^2)*(x[1]*x[2])*(bt^2))/((1+bt)^2)
}
hess[1,2]<-w1w0
hess[2,1]<-w1w0
#w2w0
w2w0<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w0<-w2w0+(1+bt)*((d$default[i]^2)*(x[1]*x[3])*bt)-((d$default[i]^2)*(x[1]*x[3])*(bt^2))/((1+bt)^2)
}
hess[1,3]<-w2w0
hess[3,1]<-w2w0
#w1w1
w1w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w1w1<-w1w1+(1+bt)*((d$default[i]^2)*(x[2]^2)*bt)-((d$default[i]^2)*(x[2]^2)*(bt^2))/((1+bt)^2)
}
hess[2,2]<-w1w1
#w2w1
w2w1<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w1<-w2w1+(1+bt)*((d$default[i]^2)*(x[2]*x[3])*bt)-((d$default[i]^2)*(x[2]*x[3])*(bt^2))/((1+bt)^2)
}
hess[2,3]<-w2w1
hess[3,2]<-w2w1
#w2w2
w2w2<-0
for (i in 1:nrow(d)){
x<-(c(1,as.numeric(d$salary[i]),as.numeric(d$gender[i])))
bt<-(exp(-d$default[i]*sum(t(opt$par)*x)))
w2w2<-w2w2+(1+bt)*((d$default[i]^2)*(x[3]^2)*bt)-((d$default[i]^2)*(x[3]^2)*(bt^2))/((1+bt)^2)
}
hess[3,3]<-w2w2
covv<-ginv(hess)
covv
s0<-sqrt(covv[1,1])
s1<-sqrt(covv[2,2])
s2<-sqrt(covv[3,3])
s0
s1
s2
ep_c<-c(0.1,0.1,0.1,0.1)
ev<-eigen(covv)
ev_<-c(0,0,0)
for (i in 1:nrow(covv)){
ev_[i]<-ev$values[i]+rlaplace(n=1,m=0,s=(ep_c[1]/2))
}
covv_<-covv
p<-diag(3)
de<-matrix(0,3,3)
#for (i in 1:3){
#draw u - based on more in depth paper
a<- ((-ep_c[1]/4)*covv)+(ep_c[1]/4)*ev$values[3]*diag(3)
b<- -4*1/6*(sum(eigen(a)$values))+sqrt(9-64*(sum(eigen(a)$values))*((eigen(a)$values[1]*eigen(a)$values[2])+(eigen(a)$values[1]*eigen(a)$values[3])+(eigen(a)$values[3]*eigen(a)$values[2])))
bell<- diag(3)+2*a/b
m<- exp(-(3-b)/2)*((3/b)^(3/2))
z<- c(0,0,0)
bell_1<-bell^-1
for (j in 3){z[j]<-rnorm(mean=0,sd=bell_1[j,j],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)
pp
while (runif(1)>pp){for (i in 3){z[i]<-rnorm(mean=0,sd=bell_1[i,i],n=1)}
ifelse(norm(z,type='2')==0,u<-z,u<-z/norm(z,type='2'))
pp<- (exp(-t(u)%*%a%*%u))/m*(t(u)%*%bell%*%u)^(3/2)}
#############
de[i,]<-t(p)%*%u
#calculate the orthogonal complement of U
U_o<-Null(t(de))
#set p as the projection matrix onto the orthogonal complement of U
p<-projection(U_o,active=seq(1,2))
#update covv_
covv_<-p%*%covv_%*%t(p)
#}
covv_dp
covv
w0_dp<-opt$par[1]/s0_dp
w1_dp<-opt$par[2]/s1_dp
w2_dp<-opt$par[3]/s2_dp
opt$par
w0_dp
w1_dp
w2_dp
